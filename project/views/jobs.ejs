<%- include('layout/header') %>

<section style="padding: 40px 0; background: var(--gray-100);">
    <div class="container">
        <div class="flex-between" style="margin-bottom: 32px;">
            <div>
                <h1>Job Opportunities</h1>
                <p style="color: var(--gray-600); margin: 0;">Find your next career opportunity in Nepal</p>
            </div>
            <div style="display: flex; gap: 16px;">
                <select id="sortBy" class="form-select" style="width: auto;">
                    <option value="newest">Newest First</option>
                    <option value="oldest">Oldest First</option>
                    <option value="title">Title A-Z</option>
                </select>
            </div>
        </div>
        
        <!-- Search and Filters -->
        <div class="card" style="margin-bottom: 32px;">
            <div class="grid grid-3" style="gap: 16px;">
                <div class="form-group" style="margin-bottom: 0;">
                    <input type="text" id="searchInput" placeholder="Job title, keywords..." class="form-input">
                </div>
                <div class="form-group" style="margin-bottom: 0;">
                    <input type="text" id="locationInput" placeholder="Location" class="form-input">
                </div>
                <div class="form-group" style="margin-bottom: 0;">
                    <select id="jobTypeFilter" class="form-select">
                        <option value="">All Job Types</option>
                        <option value="full-time">Full Time</option>
                        <option value="part-time">Part Time</option>
                        <option value="contract">Contract</option>
                        <option value="internship">Internship</option>
                    </select>
                </div>
            </div>
            <div style="margin-top: 16px; text-align: center;">
                <button class="btn btn-primary" onclick="searchJobs()">Search Jobs</button>
                <button class="btn btn-secondary" onclick="clearFilters()">Clear Filters</button>
            </div>
        </div>
    </div>
</section>

<section style="padding: 40px 0;">
    <div class="container">
        <!-- Loading State -->
        <div id="loadingState" style="text-align: center; padding: 40px;">
            <div class="loading" style="margin: 0 auto 16px;"></div>
            <p>Loading job opportunities...</p>
        </div>
        
        <!-- Jobs Grid -->
        <div id="jobsGrid" class="grid grid-2" style="display: none;">
            <!-- Jobs will be loaded here -->
        </div>
        
        <!-- No Results -->
        <div id="noResults" style="text-align: center; padding: 40px; display: none;">
            <h3>No jobs found</h3>
            <p style="color: var(--gray-600);">Try adjusting your search criteria or check back later for new opportunities.</p>
        </div>
        
        <!-- Pagination -->
        <div id="pagination" style="text-align: center; margin-top: 48px; display: none;">
            <!-- Pagination will be loaded here -->
        </div>
    </div>
</section>

<!-- Job Detail Modal -->
<div id="jobModal" class="modal">
    <div class="modal-content" style="max-width: 800px;">
        <div id="jobDetail">
            <!-- Job details will be loaded here -->
        </div>
    </div>
</div>

<script>
let currentPage = 1;
let currentFilters = {};

// Initialize page
document.addEventListener('DOMContentLoaded', function() {
    loadJobs();
    
    // Add event listeners
    document.getElementById('sortBy').addEventListener('change', loadJobs);
    
    // Add enter key support
    ['searchInput', 'locationInput'].forEach(id => {
        document.getElementById(id).addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                searchJobs();
            }
        });
    });
    
    // Close modal when clicking outside
    document.getElementById('jobModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeJobModal();
        }
    });
});

async function loadJobs(page = 1) {
    currentPage = page;
    
    try {
        showLoading();
        
        const params = new URLSearchParams({
            page: page,
            ...currentFilters
        });
        
        const sortBy = document.getElementById('sortBy').value;
        if (sortBy) params.append('sort', sortBy);
        
        const response = await fetch(`/api/jobs?${params.toString()}`);
        const data = await response.json();
        
        displayJobs(data.jobs);
        displayPagination(data);
        
    } catch (error) {
        console.error('Error loading jobs:', error);
        showError('Failed to load jobs. Please try again later.');
    }
}

function displayJobs(jobs) {
    const grid = document.getElementById('jobsGrid');
    const noResults = document.getElementById('noResults');
    
    hideLoading();
    
    if (jobs.length === 0) {
        grid.style.display = 'none';
        noResults.style.display = 'block';
        document.getElementById('pagination').style.display = 'none';
        return;
    }
    
    noResults.style.display = 'none';
    grid.style.display = 'grid';
    
    grid.innerHTML = jobs.map(job => `
        <div class="job-card" onclick="showJobDetail(${job.id})">
            <div class="job-card-header">
                <div>
                    <h3 class="job-title">${job.title}</h3>
                    <div class="company-name">${job.company_name}</div>
                    <div class="job-location">üìç ${job.location}</div>
                </div>
                <div>
                    <span class="status-badge status-${job.status}">${job.status}</span>
                </div>
            </div>
            <div class="job-meta">
                <span class="job-type">${job.job_type.replace('-', ' ')}</span>
                ${job.salary_range ? `<span class="job-salary">üí∞ ${job.salary_range}</span>` : ''}
                <span style="color: var(--gray-500); font-size: 12px;">üìÖ ${new Date(job.created_at).toLocaleDateString()}</span>
            </div>
            <p class="job-description">${job.description}</p>
            <div style="margin-top: 16px; display: flex; justify-content: space-between; align-items: center;">
                <span class="btn btn-primary btn-sm">View Details</span>
                <span style="color: var(--gray-500); font-size: 12px;">${job.industry}</span>
            </div>
        </div>
    `).join('');
}

function displayPagination(data) {
    const pagination = document.getElementById('pagination');
    
    if (data.totalPages <= 1) {
        pagination.style.display = 'none';
        return;
    }
    
    pagination.style.display = 'block';
    
    let paginationHTML = '';
    
    // Previous button
    if (data.currentPage > 1) {
        paginationHTML += `<button class="btn btn-secondary" onclick="loadJobs(${data.currentPage - 1})">Previous</button>`;
    }
    
    // Page numbers
    for (let i = Math.max(1, data.currentPage - 2); i <= Math.min(data.totalPages, data.currentPage + 2); i++) {
        const isActive = i === data.currentPage;
        paginationHTML += `<button class="btn ${isActive ? 'btn-primary' : 'btn-secondary'}" onclick="loadJobs(${i})" ${isActive ? 'disabled' : ''}>${i}</button>`;
    }
    
    // Next button
    if (data.currentPage < data.totalPages) {
        paginationHTML += `<button class="btn btn-secondary" onclick="loadJobs(${data.currentPage + 1})">Next</button>`;
    }
    
    pagination.innerHTML = `
        <div style="display: flex; gap: 8px; justify-content: center; align-items: center;">
            ${paginationHTML}
        </div>
        <p style="margin-top: 16px; color: var(--gray-600);">
            Showing ${((data.currentPage - 1) * 10) + 1} to ${Math.min(data.currentPage * 10, data.total)} of ${data.total} jobs
        </p>
    `;
}

function searchJobs() {
    currentFilters = {
        search: document.getElementById('searchInput').value,
        location: document.getElementById('locationInput').value,
        job_type: document.getElementById('jobTypeFilter').value
    };
    
    // Remove empty filters
    Object.keys(currentFilters).forEach(key => {
        if (!currentFilters[key]) {
            delete currentFilters[key];
        }
    });
    
    loadJobs(1);
}

function clearFilters() {
    document.getElementById('searchInput').value = '';
    document.getElementById('locationInput').value = '';
    document.getElementById('jobTypeFilter').value = '';
    document.getElementById('sortBy').value = 'newest';
    
    currentFilters = {};
    loadJobs(1);
}

async function showJobDetail(jobId) {
    try {
        const response = await fetch(`/api/jobs/${jobId}`);
        const job = await response.json();
        
        document.getElementById('jobDetail').innerHTML = `
            <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 24px;">
                <h2>${job.title}</h2>
                <button onclick="closeJobModal()" class="btn btn-secondary">‚úï</button>
            </div>
            
            <div style="margin-bottom: 24px;">
                <h3 style="color: var(--primary-600);">${job.company_name}</h3>
                <p style="color: var(--gray-600); margin: 8px 0;">üìç ${job.location}</p>
                <div style="display: flex; gap: 16px; margin: 16px 0;">
                    <span class="job-type">${job.job_type.replace('-', ' ')}</span>
                    ${job.salary_range ? `<span class="job-salary">üí∞ ${job.salary_range}</span>` : ''}
                    <span class="status-badge status-${job.status}">${job.status}</span>
                </div>
            </div>
            
            <div style="margin-bottom: 24px;">
                <h4>Job Description</h4>
                <div style="white-space: pre-line; color: var(--gray-700);">${job.description}</div>
            </div>
            
            ${job.requirements ? `
                <div style="margin-bottom: 24px;">
                    <h4>Requirements</h4>
                    <div style="white-space: pre-line; color: var(--gray-700);">${job.requirements}</div>
                </div>
            ` : ''}
            
            <div style="margin-bottom: 24px;">
                <h4>Company Information</h4>
                <p><strong>Industry:</strong> ${job.industry}</p>
                <p><strong>Location:</strong> ${job.company_location}</p>
                ${job.company_description ? `<p style="margin-top: 12px;">${job.company_description}</p>` : ''}
            </div>
            
            <div style="border-top: 1px solid var(--gray-200); padding-top: 24px;">
                ${isUserLoggedIn() ? `
                    <button class="btn btn-primary" onclick="applyToJob(${job.id})">Apply Now</button>
                ` : `
                    <p style="color: var(--gray-600); margin-bottom: 16px;">Please log in to apply for this position.</p>
                    <a href="/login" class="btn btn-primary">Login to Apply</a>
                `}
                <p style="color: var(--gray-500); font-size: 14px; margin-top: 16px;">
                    Posted on ${new Date(job.created_at).toLocaleDateString()}
                </p>
            </div>
        `;
        
        document.getElementById('jobModal').classList.add('active');
    } catch (error) {
        console.error('Error loading job details:', error);
        showError('Failed to load job details');
    }
}

function closeJobModal() {
    document.getElementById('jobModal').classList.remove('active');
}

function applyToJob(jobId) {
    if (!isUserLoggedIn()) {
        window.location.href = '/login';
        return;
    }
    
    // For jobseekers, redirect to application form
    window.location.href = `/dashboard/jobseeker?apply=${jobId}`;
}

function isUserLoggedIn() {
    return <%= user ? 'true' : 'false' %>;
}

function showLoading() {
    document.getElementById('loadingState').style.display = 'block';
    document.getElementById('jobsGrid').style.display = 'none';
    document.getElementById('noResults').style.display = 'none';
    document.getElementById('pagination').style.display = 'none';
}

function hideLoading() {
    document.getElementById('loadingState').style.display = 'none';
}

function showError(message) {
    hideLoading();
    document.getElementById('jobsGrid').innerHTML = `
        <div style="grid-column: 1 / -1; text-align: center; padding: 40px;">
            <div class="alert alert-error">${message}</div>
        </div>
    `;
    document.getElementById('jobsGrid').style.display = 'grid';
}

// Handle URL parameters
const urlParams = new URLSearchParams(window.location.search);
if (urlParams.get('search')) {
    document.getElementById('searchInput').value = urlParams.get('search');
}
if (urlParams.get('location')) {
    document.getElementById('locationInput').value = urlParams.get('location');
}
if (urlParams.get('search') || urlParams.get('location')) {
    searchJobs();
}
</script>

<%- include('layout/footer') %>